<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "../../../docbook-xml-4.5/docbookx.dtd">
<chapter id="chapter.translation.memories">
  <title>翻译记忆<indexterm class="singular">
      <primary>翻译记忆</primary>
    </indexterm><indexterm class="singular">
      <primary>TMX</primary> <see>翻译记忆</see>
    </indexterm></title>

  <section id="OmegaT.and.tmx.files">
    <title>OmegaT 中的翻译记忆</title>

    <section id="tmx.files.location.and.purpose">
      <title>tmx 文件夹 - 位置及用途</title>

      <para><application>OmegaT</application>项目含有在五个不同位置的翻译记忆文件，即扩展名为tmx的文件：</para>

      <variablelist>
        <varlistentry>
          <term><indexterm class="singular">
              <primary>翻译记忆</primary> <secondary>omegat 子目录</secondary> <seealso>项目文件</seealso>
            </indexterm>omegat 文件夹</term>

          <listitem>
            <para>The omegat folder contains the
            <filename>project_save.tmx</filename> and possibly a number of
            backup TMX files. The <filename>project_save.tmx</filename> file
            contains all the segments that have been recorded in memory since
            you started the project. This file always exists in the project.
            Its contents will always be sorted alphabetically by the source
            segment.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><indexterm class="singular">
              <primary>翻译记忆</primary> <secondary>项目主文件夹</secondary>
            </indexterm>项目主文件夹</term>

          <listitem>
            <para>项目主文件夹中包含 3 个 tmx 文件：<filename>project_name-omegat.tmx</filename>，<filename>project_name-level1.tmx</filename> 以及 <filename>project_name-level2.tmx</filename>（project_name 是项目的名称）。</para>

            <itemizedlist>
              <listitem>
                <para>level1 文件仅包含文本信息。</para>
              </listitem>

              <listitem>
                <para>level2 文件以适当的 TMX 标签封装了 <application>OmegaT</application> 的特殊标签，因此它可以在支持第 2 级 TMX 的翻译工具中使用其中的格式信息，包括 <application>OmegaT</application> 本身。</para>
              </listitem>

              <listitem>
                <para><application>OmegaT</application> 文件包含了 <application>OmegaT</application> 特殊的格式标签，因此该文件可用于其他 <application>OmegaT</application> 项目。</para>
              </listitem>
            </itemizedlist>

            <para>These files are copies of the file
            <filename>project_save.tmx</filename>, i.e. of the project's main
            translation memory, excluding the so-called orphan segments. They
            carry appropriately changed names, so that its contents still
            remain identifiable, when used elsewhere, for instance in the
            <filename>tm</filename> subfolder of some other project (see
            below).</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><filename><indexterm class="singular">
              <primary>翻译记忆</primary> <secondary>tm 子目录</secondary> <seealso>项目文件</seealso>
            </indexterm>tm</filename> 目录</term>

          <listitem>
            <para>The /tm/ folder can contain any number of ancillary
            translation memories - i.e. tmx files. Such files can be created
            in any of the three varieties indicated above. Note that other CAT
            tools can export (and import as well) tmx files, usually in all
            three forms. The best thing of course is to use OmegaT-specific
            TMX files (see above), so that the in-line formatting within the
            segment is retained.</para>

            <para>The contents of translation memories in the tm subfolder
            serve to generate suggestions for the text(s) to be translated.
            Any text, already translated and stored in those files, will
            appear among the fuzzy matches, if it is sufficiently similar to
            the text currently being translated.</para>

            <para>If the source segment in one of the ancillary TMs is
            identical to the text being translated, OmegaT acts as defined in
            the <menuchoice>
                <guimenu>Options</guimenu>

                <guimenuitem>Editing Behavior...</guimenuitem>
              </menuchoice> dialog window. For instance (if the default is
            accepted), the translation from the ancillary TM is accepted and
            prefixed with<emphasis> [fuzzy]</emphasis>, so that the translator
            can review the translations at a later stage and check whether the
            segments tagged this way, have been translated correctly (see the
            <link linkend="chapter.translation.editing">Editing
            behavior</link> chapter) <menuchoice>
                <guimenu>.</guimenu>
              </menuchoice></para>

            <para>It may happen, that translation memories, available in the
            <filename>tm</filename> subfolder, contain segments with identical
            source text, but differing targets. TMX files are read sorted by
            their names and segments within a given TMX file line by line. The
            last segment with the identical source text will thus prevail
            (Note: of course it makes more sense to avoid this to happen in
            the first place).</para>

            <para>注意在tm文件夹中的TMX文件可使用gzip压缩。<indexterm class="singular">
                <primary>翻译记忆</primary> <secondary>打包</secondary>
              </indexterm></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><indexterm class="singular">
              <primary>翻译记忆</primary> <secondary>tm/auto 子目录</secondary> <seealso>项目文件</seealso>
            </indexterm>tm/auto  目录<indexterm class="singular">
              <primary>项目</primary> <secondary>预翻译</secondary>
            </indexterm></term>

          <listitem>
            <para>如果在提供的 TM 中的译文完全可靠的话，那么可以把它们放到 <emphasis role="bold"> tm/auto</emphasis> 目录以避免需要对大量的 <emphasis> [模糊]</emphasis>进行确认。</para>

            <para><orderedlist>
                <listitem>
                  <para>将TMX文件放入tm/auto/文件夹。</para>
                </listitem>

                <listitem>
                  <para>Open the project. The changes are displayed.</para>
                </listitem>

                <listitem>
                  <para>Make a slight change anywhere in the project. This
                  modifies <filename>project_save.tmx</filename> (by adding
                  proper Translation Units from &quot;auto&quot; TMX)</para>
                </listitem>
              </orderedlist></para>

            <para>提示：如果在步骤3之前，TMX已从/tm/auto文件夹移除，则不会添加额外的翻译单元。</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>tm/enforce 目录</term>

          <listitem>
            <para>如果您认同TMX比OmegaT的<filename>project_save.tmx</filename>更准确，请将此TMX置于/tm/enforce目录下，以便无条件覆盖现有的默认翻译。</para>

            <para><orderedlist>
                <listitem>
                  <para>将TMX放入/tm/enforce目录</para>
                </listitem>

                <listitem>
                  <para>Open the project. The changes are displayed.</para>
                </listitem>

                <listitem>
                  <para>Make a slight change anywhere in the project. This
                  modifies <filename>project_save.tmx</filename>.</para>
                </listitem>

                <listitem>
                  <para>使片段免除于强制执行：<itemizedlist>
                      <listitem>
                        <para>如果它们<emphasis>不需要</emphasis>免除于进一步更改，请从/tm/enforce中删除TMX。</para>
                      </listitem>

                      <listitem>
                        <para>如果它们<emphasis>需要</emphasis>免除于进一步更改，请在/tm/enforce中保留TMX。</para>
                      </listitem>
                    </itemizedlist></para>
                </listitem>
              </orderedlist></para>

            <para>提示：如果在步骤3之前，TMX已从/tm/auto文件夹移除，则强制执行不会被保存。</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>tm/mt 目录</term>

          <listitem>
            <para>In the editor pane, when a match is inserted from a TMX
            contained in a folder named <emphasis role="bold">mt</emphasis>,
            the background of the active segment is changed to red. The
            background is restored to normal when the segment is left.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><indexterm class="singular">
              <primary>翻译记忆</primary> <secondary>tm/penalty-xxx子文件夹</secondary> <seealso>项目文件</seealso>
            </indexterm>tm/penalty-xxx文件夹</term>

          <listitem>
            <para>Sometimes, it is useful to distinguish between high-quality
            translation memories and those that are, because of the subject
            matter, client, revision status, etc., less reliable. For
            translation memories in folders with a name &quot;penalty-xxx&quot; (with
            xxx between 0 and 100), matches will be degraded according to the
            name of the folder: a 100% match in any of TMs, residing in a
            folder called Penalty-30 for instance, will be lowered to a 70%
            match. The penalty applies to all three match percentages: matches
            75, 80, 90 will in this case be lowered to 45, 50, 60.</para>
          </listitem>
        </varlistentry>
      </variablelist>

      <para>Optionally, you can let <application>OmegaT</application> have an
      additional tmx file (<application>OmegaT</application>-style) anywhere
      you specify, containing all translatable segments of the project. See
      pseudo-translated memory below.</para>

      <para>Note that all the translation memories are loaded into memory when
      the project is opened. Back-ups of the project translation memory are
      produced regularly (see next chapter), and
      <filename>project_save.tmx</filename> is also saved/updated when the
      project is closed or loaded again. This means for instance that you do
      not need to exit a project you are currently working on if you decide to
      add another ancillary TM to it: you simply reload the project, and the
      changes you have made will be included.</para>

      <para>对于指定的项目，多种不同翻译记忆的位置是由用户定义的（请参阅<link linkend="chapter.project.properties">项目属性</link>中的项目对话框）。</para>

      <para>根据不同的情况可采取不同的策略，例如：</para>

      <para><emphasis role="bold">several projects on the same subject:
      </emphasis>keep the project structure, and change source and target
      folders (Source = source/order1, target = target/order1 etc). Note that
      you segments from order1, that are not present in order2 and other
      subsequent jobs, will be tagged as orphan segments; however, they will
      still be useful for getting fuzzy matches.</para>

      <para><emphasis role="bold">several translators working on the same
      project:</emphasis> split the source files into source/Alice,
      source/Bob... and allocate them to team members (Alice, Bob ...). They
      can then create their own projects and, deliver their own
      <filename>project_save.tmx</filename>, when finished or when a given
      milestone has been reached. The <filename>project_save.tmx</filename>
      files are then collected and possible conflicts as regards terminology
      for instance get resolved. A new version of the master TM is then
      created, either to be put in team members'
      <emphasis>tm/auto</emphasis>subfolders or to replace their
      <filename>project_save.tmx</filename> files. The team can also use the
      same subfolder structure for the target files. This allows them for
      instance to check at any moment, whether the target version for the
      complete project is still OK</para>
    </section>

    <section id="tmx.backup">
      <title>TMX 备份<indexterm class="singular">
          <primary>翻译记忆</primary> <secondary>备份</secondary>
        </indexterm></title>

      <para>翻译时，<application>OmegaT</application>会不断在项目/<filename>omegat</filename>子文件夹的<filename>project_save.tmx</filename>文件中保存您的工作。</para>

      <para><application>OmegaT</application> also backups translation memory
      to <filename>project_save.tmx.YEARMMDDHHNN.bak</filename> in the same
      subfolder whenever a project is opened or reloaded. YEAR is 4-digit
      year, MM is a month, DD day of the month, HH and NN are hours and
      minutes when the previous translation memory was saved.</para>

      <para>如果您认为丢失了翻译数据，可执行下列步骤：</para>

      <orderedlist>
        <listitem>
          <para>关闭项目</para>
        </listitem>

        <listitem>
          <para>重命名当前的 <filename>project_save.tmx</filename> 文件（例如改名为 <filename>project_save.tmx.temporary</filename>）</para>
        </listitem>

        <listitem>
          <para>选择最有可能包含所需数据的翻译记忆备份（例如最近的那个或从某个日子的最后版本）</para>
        </listitem>

        <listitem>
          <para>复制并更名为 <filename>project_save.tmx</filename></para>
        </listitem>

        <listitem>
          <para>打开项目</para>
        </listitem>
      </orderedlist>
    </section>

    <section id="tmx.files.and.language">
      <title>tmx 文件和语种<indexterm class="singular">
          <primary>翻译记忆</primary> <secondary>语种</secondary>
        </indexterm></title>

      <para>Tmx files contain translation units, made of a number of
      equivalent segments in several languages. A translation unit comprises
      at least two translation unit variants (TUV). Either can be used as the
      source or target.</para>

      <para>The settings in your project indicate which is the source and
      which the target language. OmegaT thus takes the TUV segments
      corresponding to the project's source and target language codes and uses
      them as the source and target segments respectively. OmegaT recognizes
      the language codes using the following two standard conventions :</para>

      <itemizedlist>
        <listitem>
          <para>2 字母（例如对于 Japanese 为 JA），或者</para>
        </listitem>

        <listitem>
          <para>2 或 3 个字母的语言代码后跟着 2 个字母的国家代码（例如 EN-US - 请参阅<xref linkend="appendix.languages"/>了解部分的语言和国家代码）。</para>
        </listitem>
      </itemizedlist>

      <para>If the project language codes and the tmx language codes fully
      match, the segments are loaded in memory. If languages match but not the
      country, the segments still get loaded. If neither the language code not
      the country code match, the segments will be ignored.</para>

      <para><indexterm class="singular">
          <primary>翻译记忆</primary> <secondary>多语种处理</secondary>
        </indexterm>TMX files can generally contain translation units with
      several candidate languages. If for a given source segment there is no
      entry for the selected target language, all other target segments are
      loaded, regardless of the language. For instance, if the language pair
      of the project is DE-FR, it can be still be of some help to see hits in
      the DE-EN translation, if there's none in the DE-FR pair.</para>
    </section>

    <section>
      <title>孤立片段<indexterm class="singular">
          <primary>翻译记忆</primary> <secondary>孤立片段</secondary>
        </indexterm></title>

      <para>The file <filename>project_save.tmx</filename> contains all the
      segments that have been translated since you started the project. If you
      modify the project segmentation or delete files from the source, some
      matches may appear as <emphasis role="bold">orphan strings</emphasis> in
      the Match Viewer: such matches refer to segments that do not exist any
      more in the source documents, as they correspond to segments translated
      and recorded before the modifications took place.</para>
    </section>
  </section>

  <section id="using.translation.memories.from.previous.projects">
    <title>重用翻译记忆<indexterm class="singular">
        <primary>翻译记忆</primary> <secondary>重用翻译记忆</secondary>
      </indexterm></title>

    <para>Initially, that is when the project is created, the main TM of the
    project, <filename>project_save.tmx</filename> is empty. This TM gradually
    becomes filled during the translation. To speed up this process, existing
    translations can be reused. If a given sentence has already been
    translated once, and translated correctly, there is no need for it to be
    retranslated. Translation memories may also contain reference
    translations: multinational legislation, such as that of the European
    Community, is a typical example.</para>

    <para>When you create the target documents in an
    <application>OmegaT</application> project, the translation memory of the
    project is output in the form of three files in the root folder of your
    <application>OmegaT</application> project (see the above description). You
    can regard these three tmx files (<filename>-omegat.tmx</filename>,
    <filename>-level1.tmx</filename> and <filename>-level2.tmx</filename>) as
    an &quot;export translation memory&quot;, i.e. as an export of your current
    project's content in bilingual form.</para>

    <para>Should you wish to reuse a translation memory from a previous
    project (for example because the new project is similar to the previous
    project, or uses terminology which might have been used before), you can
    use these translation memories as &quot;input translation memories&quot;, i.e. for
    import into your new project. In this case, place the translation memories
    you wish to use in the <emphasis>/tm</emphasis> or
    <emphasis>/tm</emphasis>/auto folder of your new project: in the former
    case you will get hits from these translation memories in the fuzzy
    matches viewer, and in the latter case these TMs will be used to
    pre-translate your source text.</para>

    <para>By default, the /tm folder is below the project's root folder (e.g.
    ...<emphasis>/MyProject/tm</emphasis>), but you can choose a different
    folder in the project properties dialog if you wish. This is useful if you
    frequently use translation memories produced in the past, for example
    because they are on the same subject or for the same customer. In this
    case, a useful procedure would be:</para>

    <itemizedlist>
      <listitem>
        <para>在硬盘上某个习惯的位置创建一个文件夹（“仓库文件夹”）以保存某个客户或者主题的翻译记忆。</para>
      </listitem>
    </itemizedlist>

    <itemizedlist>
      <listitem>
        <para>每当完成一个项目，将该三份“导出”翻译记忆从项目的根文件夹复制到仓库文件夹。</para>
      </listitem>
    </itemizedlist>

    <itemizedlist>
      <listitem>
        <para>当您为同一主题或者客户启动一个新项目时，在<guimenuitem>项目 &gt; 属性 &gt; 编辑项目</guimenuitem>对话框找到该仓库文件夹，将其选中为翻译记忆文件夹。</para>
      </listitem>
    </itemizedlist>

    <para>Note that all the tmx files in the /tm repository are parsed when
    the project is opened, so putting all different TMs you may have on hand
    into this folder may unnecessarily slow OmegaT down. You may even consider
    removing those that are not required any more, once you have used their
    contents to fill up the <filename>project-save.tmx</filename> file.</para>

    <section id="importing.and.exporting.translation.memories">
      <title>导入和导出翻译记忆<indexterm class="singular">
          <primary>翻译记忆</primary> <secondary>导入和导出</secondary>
        </indexterm></title>

      <para>OmegaT supports imported tmx versions 1.1-1.4b (both level 1 and
      level 2). This enables the translation memories produced by other tools
      to be read by OmegaT. However, OmegaT does not fully support imported
      level 2 tmx files (these store not only the translation, but also the
      formatting). Level 2 tmx files will still be imported and their textual
      content can be seen in OmegaT, but the quality of fuzzy matches will be
      somewhat lower.</para>

      <para>OmegaT follows very strict procedures when loading translation
      memory (tmx) files. If an error is found in such a file, OmegaT will
      indicate the position within the defective file at which the error is
      located.</para>

      <para>Some tools are known to produce invalid tmx files under certain
      conditions. If you wish to use such files as reference translations in
      OmegaT, they must be repaired, or OmegaT will report an error and fail
      to load them. Fixes are trivial operations and OmegaT assists
      troubleshooting with the related error message. You can ask the user
      group for advice if you have problems.</para>

      <para>OmegaT exports version 1.4 TMX files (both level 1 and level 2).
      The level 2 export is not fully compliant with the level 2 standard, but
      is sufficiently close and will generate correct matches in other
      translation memory tools supporting TMX Level 2. If you only need
      textual information (and not formatting information), use the level 1
      file that OmegaT has created.</para>
    </section>

    <section id="Creating.a.translation.memory.for.selected.documents">
      <title>创建所选文档的翻译记忆</title>

      <para>In case translators need to share their TMX bases while excluding
      some of their parts or including just translations of certain files,
      sharing the complete <filename>ProjectName-omegat.tmx</filename> is out
      of question. The following recipee is just one of the possibilities, but
      simple enough to follow and without any dangers for the assets.</para>

      <itemizedlist>
        <listitem>
          <para>使用希望的语言对和名称（注创建的翻译记忆文件也包含此名称）创建一个独立于其他项目的项目。</para>
        </listitem>
      </itemizedlist>

      <itemizedlist>
        <listitem>
          <para>复制您希望获取翻译记忆的源文档到项目的源文件夹。</para>
        </listitem>
      </itemizedlist>

      <itemizedlist>
        <listitem>
          <para>复制包含上述源文档翻译的翻译记忆到新项目的<filename>tm/auto</filename>子文件夹。</para>
        </listitem>
      </itemizedlist>

      <itemizedlist>
        <listitem>
          <para>Start the project. Check for possible Tag errors with
          <keycap>Ctrl+T </keycap>and untranslated segments with
          <keycap>Ctrl+U</keycap>. To check everything is as expected, you may
          press <keycap>Ctrl+D</keycap> to create the target documents and
          check their contents.</para>
        </listitem>
      </itemizedlist>

      <itemizedlist>
        <listitem>
          <para>When you exit the project. the TMX files in the main project
          folder (see above) now contain the transltions in the selected
          language pair, for the files, you have copied into the source
          folder. Copy them to a safe place for future referrals.</para>
        </listitem>
      </itemizedlist>

      <itemizedlist>
        <listitem>
          <para>要避免重用该项目而可能破坏将来的情况，则删除项目或存档到工作区外的其他位置。</para>
        </listitem>
      </itemizedlist>
    </section>

    <section id="sharing.translation.memories">
      <title>分享翻译记忆<indexterm class="singular">
          <primary>翻译记忆</primary> <secondary>分享</secondary> <seealso>项目，下载团队项目...</seealso>
        </indexterm></title>

      <para>在一个翻译团队参与的情况下，译员更喜欢分享公共的翻译记忆而不是发布他们的本地版本。</para>

      <para>OmegaT interfaces to SVN and Git, two common team software
      versioning and revision control systems (RCS), available under an open
      source license. In case of OmegaT complete project folders - in other
      words the translation memories involved as well as source folders,
      project settings etc - are managed by the selected RCS. see more in
      Chapter</para>
    </section>

    <section>
      <title>使用包含可选语言对的翻译记忆文件<indexterm class="singular">
          <primary>翻译记忆</primary> <secondary>可选语言对</secondary>
        </indexterm></title>

      <para>There may be cases where you have done a project with e.g. Dutch
      sources, and a translation in say English. Then you need a translation
      in e.g. Chinese, but your translator does not understand Dutch; she,
      however, understands perfectly English. In this case, the NL-EN
      translation memory can serve as a go-between to help generate NL to ZH
      translation.</para>

      <para>The solution in our example is to copy the existing translation
      memory into the tm/tmx2source/ subfolder and rename it to ZH_CN.tmx to
      indicate the target language of the tmx. The translator will be shown
      English translations for source segments in Dutch and use them to create
      the Chinese translation.</para>

      <para><emphasis role="bold">Important: </emphasis>the supporting TMX
      must be renamed XX_YY.tmx, where XX_YY is the target language of the
      tmx, for instance to ZH_CN.tmx in the example above. The project and TMX
      source languages should of course be identical - NL in our example. Note
      that only one TMX for a given language pair is possible, so if several
      translation memories should be involved, you will need to merge them all
      into the XX_YY.tmx.</para>
    </section>
  </section>

  <section>
    <title>带有现存译文的源<indexterm class="singular">
        <primary>翻译记忆</primary> <secondary>PO和OKAPI TTX文件</secondary> <seealso>翻译记忆tm/auto子文件夹</seealso>
      </indexterm></title>

    <para>Some types of source files (for instance PO, TTX, etc.) are
    bilingual, i.e. they serve both as a source and as a translation memory.
    In such cases, an existing translation, found in the file, is included in
    the <filename>project_save.tmx</filename>. It is treated as a default
    translation, if no match has been found, or as an alternative translation,
    in case the same source segment exists, but with a target text. The result
    will thus depend on the order in which the source segments have been
    loaded.</para>

    <para>All translations from source documents are also displayed in the
    Comment pane, in addition to the Match pane. In case of PO files, a 20%
    penalty applied to the alternative translation (i.e., a 100% match becomes
    an 80% match). The word [Fuzzy] is displayed on the source segment.</para>

    <para>When you load a segmented TTX file, segments with source = target
    will be included, if &quot;Allow translation to be equal to source&quot; in Options
    → Editing Behavior... has been checked. This may be confusing, so you may
    consider unchecking this option in this case.</para>
  </section>

  <section id="pseudo.translated.memory">
    <title>伪翻译记忆<indexterm class="singular">
        <primary>翻译记忆</primary> <secondary>伪翻译</secondary>
      </indexterm></title>

    <note>
      <para>这些内容为感兴趣的高级用户准备的！</para>
    </note>

    <para>Before segments get translated, you may wish to pre-process them or
    address them in some other way than is possible with OmegaT. For example,
    if you wish to create a pseudo-translation for testing purposes, OmegaT
    enables you to create an additional tmx file that contains all segments of
    the project. The translation in this tmx can be either</para>

    <itemizedlist>
      <listitem>
        <para>和原文相同的译文（缺省）</para>
      </listitem>
    </itemizedlist>

    <itemizedlist>
      <listitem>
        <para>译文片段为空</para>
      </listitem>
    </itemizedlist>

    <para>The tmx file can be given any name you specify. A pseudo-translated
    memory can be generated with the following command line parameters:</para>

    <para><literal>java -jar omegat.jar --pseudotranslatetmx=&lt;filename&gt;
    [pseudotranslatetype=[equal|empty]]</literal></para>

    <para>Replace <literal>&lt;filename&gt;</literal> with the name of the
    file you wish to create, either absolute or relative to the working folder
    (the folder you start <application>OmegaT</application> from). The second
    argument <literal>--pseudotranslatetype</literal> is optional. Its value
    is either <literal>equal</literal> (default value, for source=target) or
    <literal>empty</literal> (target segment is empty). You can process the
    generated tmx with any tool you want. To reuse it in
    <application>OmegaT</application> rename it to <emphasis>project_save.tmx
    </emphasis> and place it in the <literal>omegat</literal>-folder of your
    project.</para>
  </section>

  <section id="upgrading.translation.memories">
    <title>更新翻译记忆<indexterm class="singular">
        <primary>翻译记忆</primary> <secondary>更新句子分割规则</secondary>
      </indexterm></title>

    <para>Very early versions of <application>OmegaT</application> were
    capable of segmenting source files into paragraphs only and were
    inconsistent when numbering formatting tags in HTML and Open Document
    files. <application>OmegaT</application> can detect and upgrade such tmx
    files on the fly to increase fuzzy matching quality and leverage your
    existing translation better, saving you the work of doing this
    manually.</para>

    <para>A project's tmx will be upgraded only once, and will be written in
    upgraded form into the <filename>project-save.tmx</filename>; legacy tmx
    files will be upgraded on the fly each time the project is loaded. Note
    that in some cases changes in file filters in
    <application>OmegaT</application> may lead to totally different
    segmentation; as a result, you will have to upgrade your translation
    manually in such rare cases.</para>
  </section>
</chapter>